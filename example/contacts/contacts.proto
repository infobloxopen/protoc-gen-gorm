syntax = "proto3";

package api.contacts;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/infobloxopen/protoc-gen-gorm/options/gorm.proto";

option go_package = "github.com/infobloxopen/protoc-gen-gorm/example/contacts;contacts";

message Contact {
    option (gorm.opts) = {
      ormable: true,
      multi_account: true
    };
    uint64 id = 1;
    string first_name = 2;
    string middle_name = 3;
    string last_name = 4;
    string email_address = 5 [(validate.rules).string.email = true];
}

// eventually this will be replaced with a Page that uses the paging info
message ContactPage {
    repeated Contact results = 1;
}

// eventually this will be replaced with a standard search request
message SearchRequest {
    string first_name = 1;
}

message GetRequest {
    uint64 id = 1;
}

message SMSRequest {
    uint64 id = 1;
    string message = 2;
}

service Contacts {
    rpc Search (SearchRequest) returns (ContactPage) {
        option (google.api.http) = {
            get: "/contacts"
        };
    }

    rpc Create (Contact) returns (Contact) {
        option (google.api.http) = {
            post: "/contacts"
            body: "*"
        };
    }

    rpc Get (GetRequest) returns (Contact) {
        option (google.api.http) = {
            get: "/contacts/{id}"
        };
    }

    rpc Update (Contact) returns (Contact) {
        option (google.api.http) = {
            put: "/contacts/{id}"
            body: "*"
        };
    }

    rpc Delete (GetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/contacts/{id}"
        };
    }

    rpc SendSMS (SMSRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/contacts/{id}/sms"
            body: "*"
        };
    }
}
