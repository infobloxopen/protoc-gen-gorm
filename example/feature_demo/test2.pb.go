// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/feature_demo/test2.proto

/*
Package example is a generated protocol buffer package.

It is generated from these files:
	example/feature_demo/test2.proto
	example/feature_demo/test.proto

It has these top-level messages:
	IntPoint
	IntPointPage
	TestTypes
	TypeWithId
	MultitenantTypeWithId
	MultitenantTypeWithoutId
	ApiOnlyType
	TypeBecomesEmpty
*/
package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/infobloxopen/protoc-gen-gorm/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IntPoint struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	X  int32  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y  int32  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
}

func (m *IntPoint) Reset()                    { *m = IntPoint{} }
func (m *IntPoint) String() string            { return proto.CompactTextString(m) }
func (*IntPoint) ProtoMessage()               {}
func (*IntPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IntPoint) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IntPoint) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *IntPoint) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type IntPointPage struct {
	Results []*IntPoint `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *IntPointPage) Reset()                    { *m = IntPointPage{} }
func (m *IntPointPage) String() string            { return proto.CompactTextString(m) }
func (*IntPointPage) ProtoMessage()               {}
func (*IntPointPage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IntPointPage) GetResults() []*IntPoint {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*IntPoint)(nil), "example.int_point")
	proto.RegisterType((*IntPointPage)(nil), "example.int_point_page")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Point service

type PointClient interface {
	CreateIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*IntPoint, error)
	ReadIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*IntPoint, error)
	UpdateIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*IntPoint, error)
	ListIntPoint(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*IntPointPage, error)
	DeleteIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type pointClient struct {
	cc *grpc.ClientConn
}

func NewPointClient(cc *grpc.ClientConn) PointClient {
	return &pointClient{cc}
}

func (c *pointClient) CreateIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*IntPoint, error) {
	out := new(IntPoint)
	err := grpc.Invoke(ctx, "/example.Point/CreateIntPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointClient) ReadIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*IntPoint, error) {
	out := new(IntPoint)
	err := grpc.Invoke(ctx, "/example.Point/ReadIntPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointClient) UpdateIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*IntPoint, error) {
	out := new(IntPoint)
	err := grpc.Invoke(ctx, "/example.Point/UpdateIntPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointClient) ListIntPoint(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*IntPointPage, error) {
	out := new(IntPointPage)
	err := grpc.Invoke(ctx, "/example.Point/ListIntPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointClient) DeleteIntPoint(ctx context.Context, in *IntPoint, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/example.Point/DeleteIntPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Point service

type PointServer interface {
	CreateIntPoint(context.Context, *IntPoint) (*IntPoint, error)
	ReadIntPoint(context.Context, *IntPoint) (*IntPoint, error)
	UpdateIntPoint(context.Context, *IntPoint) (*IntPoint, error)
	ListIntPoint(context.Context, *google_protobuf.Empty) (*IntPointPage, error)
	DeleteIntPoint(context.Context, *IntPoint) (*google_protobuf.Empty, error)
}

func RegisterPointServer(s *grpc.Server, srv PointServer) {
	s.RegisterService(&_Point_serviceDesc, srv)
}

func _Point_CreateIntPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntPoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointServer).CreateIntPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Point/CreateIntPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointServer).CreateIntPoint(ctx, req.(*IntPoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Point_ReadIntPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntPoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointServer).ReadIntPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Point/ReadIntPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointServer).ReadIntPoint(ctx, req.(*IntPoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Point_UpdateIntPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntPoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointServer).UpdateIntPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Point/UpdateIntPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointServer).UpdateIntPoint(ctx, req.(*IntPoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Point_ListIntPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointServer).ListIntPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Point/ListIntPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointServer).ListIntPoint(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Point_DeleteIntPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntPoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointServer).DeleteIntPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Point/DeleteIntPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointServer).DeleteIntPoint(ctx, req.(*IntPoint))
	}
	return interceptor(ctx, in, info, handler)
}

var _Point_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Point",
	HandlerType: (*PointServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIntPoint",
			Handler:    _Point_CreateIntPoint_Handler,
		},
		{
			MethodName: "ReadIntPoint",
			Handler:    _Point_ReadIntPoint_Handler,
		},
		{
			MethodName: "UpdateIntPoint",
			Handler:    _Point_UpdateIntPoint_Handler,
		},
		{
			MethodName: "ListIntPoint",
			Handler:    _Point_ListIntPoint_Handler,
		},
		{
			MethodName: "DeleteIntPoint",
			Handler:    _Point_DeleteIntPoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/feature_demo/test2.proto",
}

func init() { proto.RegisterFile("example/feature_demo/test2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xb1, 0x4b, 0xc3, 0x40,
	0x14, 0xc6, 0x9b, 0x94, 0xb6, 0x7a, 0xd6, 0x0c, 0x37, 0x68, 0x8c, 0x4b, 0xc8, 0xd4, 0xc1, 0xde,
	0x41, 0x5d, 0x24, 0x42, 0x45, 0xad, 0x82, 0xe0, 0x20, 0x01, 0x17, 0x97, 0x92, 0x34, 0xaf, 0xf1,
	0x20, 0xb9, 0x3b, 0x92, 0x17, 0x48, 0xff, 0x34, 0x9d, 0xfd, 0xc3, 0xa4, 0x49, 0xda, 0xc5, 0x8a,
	0xd2, 0xf1, 0x7d, 0xfc, 0xbe, 0xf7, 0x71, 0xf7, 0x3d, 0xe2, 0x42, 0x15, 0x66, 0x3a, 0x05, 0xbe,
	0x84, 0x10, 0xcb, 0x1c, 0xe6, 0x31, 0x64, 0x8a, 0x23, 0x14, 0x38, 0x61, 0x3a, 0x57, 0xa8, 0xe8,
	0xa0, 0x25, 0x9c, 0xf3, 0x44, 0xa9, 0x24, 0x05, 0x5e, 0xcb, 0x51, 0xb9, 0xe4, 0x90, 0x69, 0x5c,
	0x35, 0x94, 0xe3, 0x27, 0x02, 0xdf, 0xcb, 0x88, 0x2d, 0x54, 0xc6, 0x85, 0x5c, 0xaa, 0x28, 0x55,
	0x95, 0xd2, 0x20, 0x1b, 0x7a, 0x31, 0x4e, 0x40, 0x8e, 0x13, 0x95, 0x67, 0x5c, 0x69, 0x14, 0x4a,
	0x16, 0x7c, 0x3d, 0x34, 0x5e, 0xef, 0x86, 0x1c, 0x0a, 0x89, 0x73, 0xad, 0x84, 0x44, 0x6a, 0x11,
	0x53, 0xc4, 0xb6, 0xe1, 0x1a, 0xa3, 0xe3, 0xc0, 0x14, 0x31, 0x1d, 0x12, 0xa3, 0xb2, 0x4d, 0xd7,
	0x18, 0xf5, 0x02, 0xa3, 0x5a, 0x4f, 0x2b, 0xbb, 0xdb, 0x4c, 0x2b, 0xbf, 0xff, 0xf9, 0x71, 0x66,
	0x1e, 0x18, 0xde, 0x94, 0x58, 0xdb, 0x05, 0x73, 0x1d, 0x26, 0x40, 0x2f, 0xc8, 0x20, 0x87, 0xa2,
	0x4c, 0xb1, 0xb0, 0x0d, 0xb7, 0x3b, 0x3a, 0x9a, 0x50, 0xd6, 0x3e, 0x83, 0x6d, 0xc9, 0x60, 0x83,
	0x4c, 0xbe, 0x4c, 0xd2, 0x7b, 0xa9, 0xd3, 0x7d, 0x62, 0xdd, 0xe7, 0x10, 0x22, 0x3c, 0x49, 0x6c,
	0x94, 0x1d, 0x46, 0x67, 0x87, 0xe6, 0x75, 0xe8, 0x15, 0x19, 0x06, 0x10, 0xc6, 0x7b, 0x38, 0x7d,
	0x62, 0xbd, 0xea, 0x78, 0xbf, 0xd4, 0x5b, 0x32, 0x7c, 0x16, 0x05, 0x6e, 0x9d, 0x27, 0xac, 0xa9,
	0x89, 0x6d, 0x6a, 0x62, 0x0f, 0xeb, 0x9a, 0x9c, 0xd3, 0x9f, 0xee, 0xfa, 0xab, 0xbc, 0x0e, 0x9d,
	0x12, 0x6b, 0x06, 0x29, 0xfc, 0x11, 0xff, 0xcb, 0x62, 0xaf, 0xe3, 0xb4, 0x35, 0xdc, 0x3d, 0xbe,
	0xcd, 0xfe, 0x7b, 0x05, 0xbb, 0xae, 0xee, 0xba, 0x15, 0xa3, 0x7e, 0x4d, 0x5f, 0x7e, 0x07, 0x00,
	0x00, 0xff, 0xff, 0x77, 0xb9, 0x53, 0xbc, 0x9c, 0x02, 0x00, 0x00,
}
