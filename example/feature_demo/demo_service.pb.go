// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: feature_demo/demo_service.proto

package example

import (
	query "github.com/infobloxopen/atlas-app-toolkit/query"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IntPoint is a basic message type representing a single cartesian point
// that we want to store in a database
type IntPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	X  int32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y  int32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *IntPoint) Reset() {
	*x = IntPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntPoint) ProtoMessage() {}

func (x *IntPoint) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntPoint.ProtoReflect.Descriptor instead.
func (*IntPoint) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{0}
}

func (x *IntPoint) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IntPoint) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *IntPoint) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type CreateIntPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Convention dictates that this field be of the given type, and be
	// named 'payload' in order to autogenerate the handler
	Payload *IntPoint `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateIntPointRequest) Reset() {
	*x = CreateIntPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIntPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIntPointRequest) ProtoMessage() {}

func (x *CreateIntPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIntPointRequest.ProtoReflect.Descriptor instead.
func (*CreateIntPointRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIntPointRequest) GetPayload() *IntPoint {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateIntPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Convention also requires that the return type be the same and named 'result'
	Result *IntPoint `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateIntPointResponse) Reset() {
	*x = CreateIntPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIntPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIntPointResponse) ProtoMessage() {}

func (x *CreateIntPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIntPointResponse.ProtoReflect.Descriptor instead.
func (*CreateIntPointResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateIntPointResponse) GetResult() *IntPoint {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReadIntPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For a read request, the id field is the only to be specified
	Id     uint32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields *query.FieldSelection `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ReadIntPointRequest) Reset() {
	*x = ReadIntPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadIntPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadIntPointRequest) ProtoMessage() {}

func (x *ReadIntPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadIntPointRequest.ProtoReflect.Descriptor instead.
func (*ReadIntPointRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReadIntPointRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadIntPointRequest) GetFields() *query.FieldSelection {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ReadIntPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Again the type with 'result' name
	Result *IntPoint `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReadIntPointResponse) Reset() {
	*x = ReadIntPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadIntPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadIntPointResponse) ProtoMessage() {}

func (x *ReadIntPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadIntPointResponse.ProtoReflect.Descriptor instead.
func (*ReadIntPointResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{4}
}

func (x *ReadIntPointResponse) GetResult() *IntPoint {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateIntPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload        *IntPoint              `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	GerogeriGegege *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=gerogeri_gegege,json=gerogeriGegege,proto3" json:"gerogeri_gegege,omitempty"`
}

func (x *UpdateIntPointRequest) Reset() {
	*x = UpdateIntPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntPointRequest) ProtoMessage() {}

func (x *UpdateIntPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntPointRequest.ProtoReflect.Descriptor instead.
func (*UpdateIntPointRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateIntPointRequest) GetPayload() *IntPoint {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UpdateIntPointRequest) GetGerogeriGegege() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.GerogeriGegege
	}
	return nil
}

type UpdateIntPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *IntPoint `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateIntPointResponse) Reset() {
	*x = UpdateIntPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntPointResponse) ProtoMessage() {}

func (x *UpdateIntPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntPointResponse.ProtoReflect.Descriptor instead.
func (*UpdateIntPointResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateIntPointResponse) GetResult() *IntPoint {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateSetIntPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*IntPoint              `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	Masks   []*fieldmaskpb.FieldMask `protobuf:"bytes,2,rep,name=masks,proto3" json:"masks,omitempty"`
}

func (x *UpdateSetIntPointRequest) Reset() {
	*x = UpdateSetIntPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSetIntPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSetIntPointRequest) ProtoMessage() {}

func (x *UpdateSetIntPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSetIntPointRequest.ProtoReflect.Descriptor instead.
func (*UpdateSetIntPointRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSetIntPointRequest) GetObjects() []*IntPoint {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *UpdateSetIntPointRequest) GetMasks() []*fieldmaskpb.FieldMask {
	if x != nil {
		return x.Masks
	}
	return nil
}

type UpdateSetIntPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IntPoint `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *UpdateSetIntPointResponse) Reset() {
	*x = UpdateSetIntPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSetIntPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSetIntPointResponse) ProtoMessage() {}

func (x *UpdateSetIntPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSetIntPointResponse.ProtoReflect.Descriptor instead.
func (*UpdateSetIntPointResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSetIntPointResponse) GetResults() []*IntPoint {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeleteIntPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only the id is needed for a delete request
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteIntPointRequest) Reset() {
	*x = DeleteIntPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntPointRequest) ProtoMessage() {}

func (x *DeleteIntPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntPointRequest.ProtoReflect.Descriptor instead.
func (*DeleteIntPointRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteIntPointRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteIntPointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only the id is needed for a delete request
	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIntPointsRequest) Reset() {
	*x = DeleteIntPointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntPointsRequest) ProtoMessage() {}

func (x *DeleteIntPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntPointsRequest.ProtoReflect.Descriptor instead.
func (*DeleteIntPointsRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteIntPointsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// By convention, on DELETE no response data is given, so either a
// google.protobuf.empty, or an empty struct is sufficient
type DeleteIntPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteIntPointResponse) Reset() {
	*x = DeleteIntPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntPointResponse) ProtoMessage() {}

func (x *DeleteIntPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntPointResponse.ProtoReflect.Descriptor instead.
func (*DeleteIntPointResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{11}
}

type ListIntPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note repeated field and plural name 'results'
	Results  []*IntPoint     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	PageInfo *query.PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
}

func (x *ListIntPointResponse) Reset() {
	*x = ListIntPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntPointResponse) ProtoMessage() {}

func (x *ListIntPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntPointResponse.ProtoReflect.Descriptor instead.
func (*ListIntPointResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListIntPointResponse) GetResults() []*IntPoint {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListIntPointResponse) GetPageInfo() *query.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type ListSomethingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note repeated field and plural name 'results'
	Results  []*Something    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	PageInfo *query.PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
}

func (x *ListSomethingResponse) Reset() {
	*x = ListSomethingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSomethingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSomethingResponse) ProtoMessage() {}

func (x *ListSomethingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSomethingResponse.ProtoReflect.Descriptor instead.
func (*ListSomethingResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListSomethingResponse) GetResults() []*Something {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListSomethingResponse) GetPageInfo() *query.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

// A dummy type to demo an rpc that can't be autogenerated
type Something struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *Something) Reset() {
	*x = Something{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Something) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Something) ProtoMessage() {}

func (x *Something) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Something.ProtoReflect.Descriptor instead.
func (*Something) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{14}
}

func (x *Something) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type ListIntPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter  *query.Filtering      `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy *query.Sorting        `protobuf:"bytes,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Fields  *query.FieldSelection `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	Paging  *query.Pagination     `protobuf:"bytes,4,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *ListIntPointRequest) Reset() {
	*x = ListIntPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntPointRequest) ProtoMessage() {}

func (x *ListIntPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntPointRequest.ProtoReflect.Descriptor instead.
func (*ListIntPointRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListIntPointRequest) GetFilter() *query.Filtering {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListIntPointRequest) GetOrderBy() *query.Sorting {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *ListIntPointRequest) GetFields() *query.FieldSelection {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListIntPointRequest) GetPaging() *query.Pagination {
	if x != nil {
		return x.Paging
	}
	return nil
}

// Test cases that were previously broken
type CreateFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateFooRequest) Reset() {
	*x = CreateFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFooRequest) ProtoMessage() {}

func (x *CreateFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFooRequest.ProtoReflect.Descriptor instead.
func (*CreateFooRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{16}
}

func (x *CreateFooRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ListFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFooRequest) Reset() {
	*x = ListFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFooRequest) ProtoMessage() {}

func (x *ListFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFooRequest.ProtoReflect.Descriptor instead.
func (*ListFooRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{17}
}

type Circle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R uint32 `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *Circle) Reset() {
	*x = Circle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Circle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Circle) ProtoMessage() {}

func (x *Circle) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Circle.ProtoReflect.Descriptor instead.
func (*Circle) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{18}
}

func (x *Circle) GetR() uint32 {
	if x != nil {
		return x.R
	}
	return 0
}

type ListCircleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCircleRequest) Reset() {
	*x = ListCircleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCircleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCircleRequest) ProtoMessage() {}

func (x *ListCircleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCircleRequest.ProtoReflect.Descriptor instead.
func (*ListCircleRequest) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{19}
}

type ListCircleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Circle `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListCircleResponse) Reset() {
	*x = ListCircleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_demo_demo_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCircleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCircleResponse) ProtoMessage() {}

func (x *ListCircleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_demo_demo_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCircleResponse.ProtoReflect.Descriptor instead.
func (*ListCircleResponse) Descriptor() ([]byte, []int) {
	return file_feature_demo_demo_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListCircleResponse) GetResults() []*Circle {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_feature_demo_demo_service_proto protoreflect.FileDescriptor

var file_feature_demo_demo_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x64,
	0x65, 0x6d, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79,
	0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0x44, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x43,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x5b, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x66,
	0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x22, 0x41, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x67, 0x65,
	0x72, 0x6f, 0x67, 0x65, 0x72, 0x69, 0x5f, 0x67, 0x65, 0x67, 0x65, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x0e, 0x67, 0x65, 0x72, 0x6f, 0x67, 0x65, 0x72, 0x69, 0x47, 0x65, 0x67, 0x65, 0x67, 0x65, 0x22,
	0x43, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x30, 0x0a,
	0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x22,
	0x48, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x18,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x33, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x7a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69,
	0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29,
	0x0a, 0x09, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xe0, 0x01, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x66,
	0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x06,
	0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x72, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0x13, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x32, 0xbc, 0x05, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e, 0xba, 0xb9, 0x19, 0x0a,
	0x0a, 0x08, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12,
	0x12, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x1a, 0x12, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x1a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08,
	0x01, 0x32, 0xa2, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x12, 0x40, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a, 0x06,
	0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x32, 0xfc, 0x04, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x54, 0x78, 0x6e, 0x12, 0x4b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0xba, 0xb9, 0x19, 0x0b, 0x0a,
	0x09, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0xba, 0xb9, 0x19, 0x0b, 0x0a,
	0x09, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12,
	0x12, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x1a, 0x12, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x1a, 0x0a, 0xba, 0xb9, 0x19, 0x06, 0x08,
	0x01, 0x10, 0x01, 0x18, 0x01, 0x32, 0x5a, 0x0a, 0x0d, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x72,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08,
	0x01, 0x32, 0xf4, 0x07, 0x0a, 0x16, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65, 0x6e, 0x12, 0x4c, 0x0a, 0x07,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x07, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x12, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x42, 0x12, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x12, 0x1c, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x12, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x12,
	0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0f, 0xba, 0xb9, 0x19, 0x0b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x5b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x12, 0x1e, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0xba,
	0xb9, 0x19, 0x0b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x5f,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x74, 0x41, 0x12, 0x1f, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f,
	0xba, 0xb9, 0x19, 0x0b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x5f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x74, 0x42, 0x12, 0x1f, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0f, 0xba, 0xb9, 0x19, 0x0b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x1a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x6f,
	0x70, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67,
	0x6f, 0x72, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x3b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feature_demo_demo_service_proto_rawDescOnce sync.Once
	file_feature_demo_demo_service_proto_rawDescData = file_feature_demo_demo_service_proto_rawDesc
)

func file_feature_demo_demo_service_proto_rawDescGZIP() []byte {
	file_feature_demo_demo_service_proto_rawDescOnce.Do(func() {
		file_feature_demo_demo_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_feature_demo_demo_service_proto_rawDescData)
	})
	return file_feature_demo_demo_service_proto_rawDescData
}

var file_feature_demo_demo_service_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_feature_demo_demo_service_proto_goTypes = []interface{}{
	(*IntPoint)(nil),                  // 0: example.IntPoint
	(*CreateIntPointRequest)(nil),     // 1: example.CreateIntPointRequest
	(*CreateIntPointResponse)(nil),    // 2: example.CreateIntPointResponse
	(*ReadIntPointRequest)(nil),       // 3: example.ReadIntPointRequest
	(*ReadIntPointResponse)(nil),      // 4: example.ReadIntPointResponse
	(*UpdateIntPointRequest)(nil),     // 5: example.UpdateIntPointRequest
	(*UpdateIntPointResponse)(nil),    // 6: example.UpdateIntPointResponse
	(*UpdateSetIntPointRequest)(nil),  // 7: example.UpdateSetIntPointRequest
	(*UpdateSetIntPointResponse)(nil), // 8: example.UpdateSetIntPointResponse
	(*DeleteIntPointRequest)(nil),     // 9: example.DeleteIntPointRequest
	(*DeleteIntPointsRequest)(nil),    // 10: example.DeleteIntPointsRequest
	(*DeleteIntPointResponse)(nil),    // 11: example.DeleteIntPointResponse
	(*ListIntPointResponse)(nil),      // 12: example.ListIntPointResponse
	(*ListSomethingResponse)(nil),     // 13: example.ListSomethingResponse
	(*Something)(nil),                 // 14: example.Something
	(*ListIntPointRequest)(nil),       // 15: example.ListIntPointRequest
	(*CreateFooRequest)(nil),          // 16: example.CreateFooRequest
	(*ListFooRequest)(nil),            // 17: example.ListFooRequest
	(*Circle)(nil),                    // 18: example.Circle
	(*ListCircleRequest)(nil),         // 19: example.ListCircleRequest
	(*ListCircleResponse)(nil),        // 20: example.ListCircleResponse
	(*query.FieldSelection)(nil),      // 21: infoblox.api.FieldSelection
	(*fieldmaskpb.FieldMask)(nil),     // 22: google.protobuf.FieldMask
	(*query.PageInfo)(nil),            // 23: infoblox.api.PageInfo
	(*query.Filtering)(nil),           // 24: infoblox.api.Filtering
	(*query.Sorting)(nil),             // 25: infoblox.api.Sorting
	(*query.Pagination)(nil),          // 26: infoblox.api.Pagination
	(*emptypb.Empty)(nil),             // 27: google.protobuf.Empty
}
var file_feature_demo_demo_service_proto_depIdxs = []int32{
	0,  // 0: example.CreateIntPointRequest.payload:type_name -> example.IntPoint
	0,  // 1: example.CreateIntPointResponse.result:type_name -> example.IntPoint
	21, // 2: example.ReadIntPointRequest.fields:type_name -> infoblox.api.FieldSelection
	0,  // 3: example.ReadIntPointResponse.result:type_name -> example.IntPoint
	0,  // 4: example.UpdateIntPointRequest.payload:type_name -> example.IntPoint
	22, // 5: example.UpdateIntPointRequest.gerogeri_gegege:type_name -> google.protobuf.FieldMask
	0,  // 6: example.UpdateIntPointResponse.result:type_name -> example.IntPoint
	0,  // 7: example.UpdateSetIntPointRequest.objects:type_name -> example.IntPoint
	22, // 8: example.UpdateSetIntPointRequest.masks:type_name -> google.protobuf.FieldMask
	0,  // 9: example.UpdateSetIntPointResponse.results:type_name -> example.IntPoint
	0,  // 10: example.ListIntPointResponse.results:type_name -> example.IntPoint
	23, // 11: example.ListIntPointResponse.page_info:type_name -> infoblox.api.PageInfo
	14, // 12: example.ListSomethingResponse.results:type_name -> example.Something
	23, // 13: example.ListSomethingResponse.page_info:type_name -> infoblox.api.PageInfo
	24, // 14: example.ListIntPointRequest.filter:type_name -> infoblox.api.Filtering
	25, // 15: example.ListIntPointRequest.order_by:type_name -> infoblox.api.Sorting
	21, // 16: example.ListIntPointRequest.fields:type_name -> infoblox.api.FieldSelection
	26, // 17: example.ListIntPointRequest.paging:type_name -> infoblox.api.Pagination
	18, // 18: example.ListCircleResponse.results:type_name -> example.Circle
	1,  // 19: example.IntPointService.Create:input_type -> example.CreateIntPointRequest
	3,  // 20: example.IntPointService.Read:input_type -> example.ReadIntPointRequest
	5,  // 21: example.IntPointService.Update:input_type -> example.UpdateIntPointRequest
	7,  // 22: example.IntPointService.UpdateSet:input_type -> example.UpdateSetIntPointRequest
	15, // 23: example.IntPointService.List:input_type -> example.ListIntPointRequest
	27, // 24: example.IntPointService.ListSomething:input_type -> google.protobuf.Empty
	9,  // 25: example.IntPointService.Delete:input_type -> example.DeleteIntPointRequest
	27, // 26: example.IntPointService.CustomMethod:input_type -> google.protobuf.Empty
	14, // 27: example.IntPointService.CreateSomething:input_type -> example.Something
	17, // 28: example.IntPointServiceB.List:input_type -> example.ListFooRequest
	16, // 29: example.IntPointServiceB.Create:input_type -> example.CreateFooRequest
	1,  // 30: example.IntPointTxn.Create:input_type -> example.CreateIntPointRequest
	3,  // 31: example.IntPointTxn.Read:input_type -> example.ReadIntPointRequest
	5,  // 32: example.IntPointTxn.Update:input_type -> example.UpdateIntPointRequest
	15, // 33: example.IntPointTxn.List:input_type -> example.ListIntPointRequest
	9,  // 34: example.IntPointTxn.Delete:input_type -> example.DeleteIntPointRequest
	10, // 35: example.IntPointTxn.DeleteSet:input_type -> example.DeleteIntPointsRequest
	27, // 36: example.IntPointTxn.CustomMethod:input_type -> google.protobuf.Empty
	14, // 37: example.IntPointTxn.CreateSomething:input_type -> example.Something
	19, // 38: example.CircleService.List:input_type -> example.ListCircleRequest
	1,  // 39: example.MultipleMethodsAutoGen.CreateA:input_type -> example.CreateIntPointRequest
	1,  // 40: example.MultipleMethodsAutoGen.CreateB:input_type -> example.CreateIntPointRequest
	3,  // 41: example.MultipleMethodsAutoGen.ReadA:input_type -> example.ReadIntPointRequest
	3,  // 42: example.MultipleMethodsAutoGen.ReadB:input_type -> example.ReadIntPointRequest
	5,  // 43: example.MultipleMethodsAutoGen.UpdateA:input_type -> example.UpdateIntPointRequest
	5,  // 44: example.MultipleMethodsAutoGen.UpdateB:input_type -> example.UpdateIntPointRequest
	15, // 45: example.MultipleMethodsAutoGen.ListA:input_type -> example.ListIntPointRequest
	15, // 46: example.MultipleMethodsAutoGen.ListB:input_type -> example.ListIntPointRequest
	9,  // 47: example.MultipleMethodsAutoGen.DeleteA:input_type -> example.DeleteIntPointRequest
	9,  // 48: example.MultipleMethodsAutoGen.DeleteB:input_type -> example.DeleteIntPointRequest
	10, // 49: example.MultipleMethodsAutoGen.DeleteSetA:input_type -> example.DeleteIntPointsRequest
	10, // 50: example.MultipleMethodsAutoGen.DeleteSetB:input_type -> example.DeleteIntPointsRequest
	2,  // 51: example.IntPointService.Create:output_type -> example.CreateIntPointResponse
	4,  // 52: example.IntPointService.Read:output_type -> example.ReadIntPointResponse
	6,  // 53: example.IntPointService.Update:output_type -> example.UpdateIntPointResponse
	8,  // 54: example.IntPointService.UpdateSet:output_type -> example.UpdateSetIntPointResponse
	12, // 55: example.IntPointService.List:output_type -> example.ListIntPointResponse
	13, // 56: example.IntPointService.ListSomething:output_type -> example.ListSomethingResponse
	11, // 57: example.IntPointService.Delete:output_type -> example.DeleteIntPointResponse
	27, // 58: example.IntPointService.CustomMethod:output_type -> google.protobuf.Empty
	14, // 59: example.IntPointService.CreateSomething:output_type -> example.Something
	12, // 60: example.IntPointServiceB.List:output_type -> example.ListIntPointResponse
	12, // 61: example.IntPointServiceB.Create:output_type -> example.ListIntPointResponse
	2,  // 62: example.IntPointTxn.Create:output_type -> example.CreateIntPointResponse
	4,  // 63: example.IntPointTxn.Read:output_type -> example.ReadIntPointResponse
	6,  // 64: example.IntPointTxn.Update:output_type -> example.UpdateIntPointResponse
	12, // 65: example.IntPointTxn.List:output_type -> example.ListIntPointResponse
	11, // 66: example.IntPointTxn.Delete:output_type -> example.DeleteIntPointResponse
	11, // 67: example.IntPointTxn.DeleteSet:output_type -> example.DeleteIntPointResponse
	27, // 68: example.IntPointTxn.CustomMethod:output_type -> google.protobuf.Empty
	14, // 69: example.IntPointTxn.CreateSomething:output_type -> example.Something
	20, // 70: example.CircleService.List:output_type -> example.ListCircleResponse
	2,  // 71: example.MultipleMethodsAutoGen.CreateA:output_type -> example.CreateIntPointResponse
	2,  // 72: example.MultipleMethodsAutoGen.CreateB:output_type -> example.CreateIntPointResponse
	4,  // 73: example.MultipleMethodsAutoGen.ReadA:output_type -> example.ReadIntPointResponse
	4,  // 74: example.MultipleMethodsAutoGen.ReadB:output_type -> example.ReadIntPointResponse
	6,  // 75: example.MultipleMethodsAutoGen.UpdateA:output_type -> example.UpdateIntPointResponse
	6,  // 76: example.MultipleMethodsAutoGen.UpdateB:output_type -> example.UpdateIntPointResponse
	12, // 77: example.MultipleMethodsAutoGen.ListA:output_type -> example.ListIntPointResponse
	12, // 78: example.MultipleMethodsAutoGen.ListB:output_type -> example.ListIntPointResponse
	11, // 79: example.MultipleMethodsAutoGen.DeleteA:output_type -> example.DeleteIntPointResponse
	11, // 80: example.MultipleMethodsAutoGen.DeleteB:output_type -> example.DeleteIntPointResponse
	11, // 81: example.MultipleMethodsAutoGen.DeleteSetA:output_type -> example.DeleteIntPointResponse
	11, // 82: example.MultipleMethodsAutoGen.DeleteSetB:output_type -> example.DeleteIntPointResponse
	51, // [51:83] is the sub-list for method output_type
	19, // [19:51] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_feature_demo_demo_service_proto_init() }
func file_feature_demo_demo_service_proto_init() {
	if File_feature_demo_demo_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feature_demo_demo_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIntPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIntPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadIntPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadIntPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSetIntPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSetIntPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntPointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSomethingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Something); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Circle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCircleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_demo_demo_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCircleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feature_demo_demo_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_feature_demo_demo_service_proto_goTypes,
		DependencyIndexes: file_feature_demo_demo_service_proto_depIdxs,
		MessageInfos:      file_feature_demo_demo_service_proto_msgTypes,
	}.Build()
	File_feature_demo_demo_service_proto = out.File
	file_feature_demo_demo_service_proto_rawDesc = nil
	file_feature_demo_demo_service_proto_goTypes = nil
	file_feature_demo_demo_service_proto_depIdxs = nil
}
