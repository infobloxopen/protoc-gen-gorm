// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/feature_demo/test2.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/infobloxopen/protoc-gen-gorm/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type IntPoint struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	X  int32  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y  int32  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
}

func (m *IntPoint) Reset()                    { *m = IntPoint{} }
func (m *IntPoint) String() string            { return proto.CompactTextString(m) }
func (*IntPoint) ProtoMessage()               {}
func (*IntPoint) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *IntPoint) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IntPoint) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *IntPoint) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type CreateIntPointRequest struct {
	Payload *IntPoint `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *CreateIntPointRequest) Reset()                    { *m = CreateIntPointRequest{} }
func (m *CreateIntPointRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateIntPointRequest) ProtoMessage()               {}
func (*CreateIntPointRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateIntPointRequest) GetPayload() *IntPoint {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CreateIntPointResponse struct {
	Result *IntPoint `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *CreateIntPointResponse) Reset()                    { *m = CreateIntPointResponse{} }
func (m *CreateIntPointResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateIntPointResponse) ProtoMessage()               {}
func (*CreateIntPointResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *CreateIntPointResponse) GetResult() *IntPoint {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReadIntPointRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadIntPointRequest) Reset()                    { *m = ReadIntPointRequest{} }
func (m *ReadIntPointRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadIntPointRequest) ProtoMessage()               {}
func (*ReadIntPointRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ReadIntPointRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadIntPointResponse struct {
	Result *IntPoint `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *ReadIntPointResponse) Reset()                    { *m = ReadIntPointResponse{} }
func (m *ReadIntPointResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadIntPointResponse) ProtoMessage()               {}
func (*ReadIntPointResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ReadIntPointResponse) GetResult() *IntPoint {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateIntPointRequest struct {
	Payload *IntPoint `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *UpdateIntPointRequest) Reset()                    { *m = UpdateIntPointRequest{} }
func (m *UpdateIntPointRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateIntPointRequest) ProtoMessage()               {}
func (*UpdateIntPointRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *UpdateIntPointRequest) GetPayload() *IntPoint {
	if m != nil {
		return m.Payload
	}
	return nil
}

type UpdateIntPointResponse struct {
	Result *IntPoint `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UpdateIntPointResponse) Reset()                    { *m = UpdateIntPointResponse{} }
func (m *UpdateIntPointResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateIntPointResponse) ProtoMessage()               {}
func (*UpdateIntPointResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *UpdateIntPointResponse) GetResult() *IntPoint {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteIntPointRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteIntPointRequest) Reset()                    { *m = DeleteIntPointRequest{} }
func (m *DeleteIntPointRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteIntPointRequest) ProtoMessage()               {}
func (*DeleteIntPointRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *DeleteIntPointRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListIntPointResponse struct {
	Results []*IntPoint `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *ListIntPointResponse) Reset()                    { *m = ListIntPointResponse{} }
func (m *ListIntPointResponse) String() string            { return proto.CompactTextString(m) }
func (*ListIntPointResponse) ProtoMessage()               {}
func (*ListIntPointResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ListIntPointResponse) GetResults() []*IntPoint {
	if m != nil {
		return m.Results
	}
	return nil
}

type Something struct {
}

func (m *Something) Reset()                    { *m = Something{} }
func (m *Something) String() string            { return proto.CompactTextString(m) }
func (*Something) ProtoMessage()               {}
func (*Something) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func init() {
	proto.RegisterType((*IntPoint)(nil), "example.int_point")
	proto.RegisterType((*CreateIntPointRequest)(nil), "example.CreateIntPointRequest")
	proto.RegisterType((*CreateIntPointResponse)(nil), "example.CreateIntPointResponse")
	proto.RegisterType((*ReadIntPointRequest)(nil), "example.ReadIntPointRequest")
	proto.RegisterType((*ReadIntPointResponse)(nil), "example.ReadIntPointResponse")
	proto.RegisterType((*UpdateIntPointRequest)(nil), "example.UpdateIntPointRequest")
	proto.RegisterType((*UpdateIntPointResponse)(nil), "example.UpdateIntPointResponse")
	proto.RegisterType((*DeleteIntPointRequest)(nil), "example.DeleteIntPointRequest")
	proto.RegisterType((*ListIntPointResponse)(nil), "example.ListIntPointResponse")
	proto.RegisterType((*Something)(nil), "example.Something")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IntPoint service

type IntPointClient interface {
	Create(ctx context.Context, in *CreateIntPointRequest, opts ...grpc.CallOption) (*CreateIntPointResponse, error)
	Read(ctx context.Context, in *ReadIntPointRequest, opts ...grpc.CallOption) (*ReadIntPointResponse, error)
	Update(ctx context.Context, in *UpdateIntPointRequest, opts ...grpc.CallOption) (*UpdateIntPointResponse, error)
	List(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*ListIntPointResponse, error)
	Delete(ctx context.Context, in *DeleteIntPointRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	CustomMethod(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	CreateSomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Something, error)
}

type intPointClient struct {
	cc *grpc.ClientConn
}

func NewIntPointClient(cc *grpc.ClientConn) IntPointClient {
	return &intPointClient{cc}
}

func (c *intPointClient) Create(ctx context.Context, in *CreateIntPointRequest, opts ...grpc.CallOption) (*CreateIntPointResponse, error) {
	out := new(CreateIntPointResponse)
	err := grpc.Invoke(ctx, "/example.IntPoint/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) Read(ctx context.Context, in *ReadIntPointRequest, opts ...grpc.CallOption) (*ReadIntPointResponse, error) {
	out := new(ReadIntPointResponse)
	err := grpc.Invoke(ctx, "/example.IntPoint/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) Update(ctx context.Context, in *UpdateIntPointRequest, opts ...grpc.CallOption) (*UpdateIntPointResponse, error) {
	out := new(UpdateIntPointResponse)
	err := grpc.Invoke(ctx, "/example.IntPoint/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) List(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*ListIntPointResponse, error) {
	out := new(ListIntPointResponse)
	err := grpc.Invoke(ctx, "/example.IntPoint/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) Delete(ctx context.Context, in *DeleteIntPointRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/example.IntPoint/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) CustomMethod(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/example.IntPoint/CustomMethod", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) CreateSomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Something, error) {
	out := new(Something)
	err := grpc.Invoke(ctx, "/example.IntPoint/CreateSomething", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IntPoint service

type IntPointServer interface {
	Create(context.Context, *CreateIntPointRequest) (*CreateIntPointResponse, error)
	Read(context.Context, *ReadIntPointRequest) (*ReadIntPointResponse, error)
	Update(context.Context, *UpdateIntPointRequest) (*UpdateIntPointResponse, error)
	List(context.Context, *google_protobuf2.Empty) (*ListIntPointResponse, error)
	Delete(context.Context, *DeleteIntPointRequest) (*google_protobuf2.Empty, error)
	CustomMethod(context.Context, *google_protobuf2.Empty) (*google_protobuf2.Empty, error)
	CreateSomething(context.Context, *Something) (*Something, error)
}

func RegisterIntPointServer(s *grpc.Server, srv IntPointServer) {
	s.RegisterService(&_IntPoint_serviceDesc, srv)
}

func _IntPoint_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Create(ctx, req.(*CreateIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Read(ctx, req.(*ReadIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Update(ctx, req.(*UpdateIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).List(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Delete(ctx, req.(*DeleteIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_CustomMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).CustomMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/CustomMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).CustomMethod(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_CreateSomething_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Something)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).CreateSomething(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/CreateSomething",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).CreateSomething(ctx, req.(*Something))
	}
	return interceptor(ctx, in, info, handler)
}

var _IntPoint_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.IntPoint",
	HandlerType: (*IntPointServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IntPoint_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _IntPoint_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _IntPoint_Update_Handler,
		},
		{
			MethodName: "List",
			Handler:    _IntPoint_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _IntPoint_Delete_Handler,
		},
		{
			MethodName: "CustomMethod",
			Handler:    _IntPoint_CustomMethod_Handler,
		},
		{
			MethodName: "CreateSomething",
			Handler:    _IntPoint_CreateSomething_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/feature_demo/test2.proto",
}

func init() { proto.RegisterFile("example/feature_demo/test2.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0x95, 0x1c, 0x57, 0x4e, 0xc6, 0x69, 0x03, 0xdb, 0x38, 0x38, 0xea, 0x97, 0x59, 0x28, 0x0d,
	0x25, 0x91, 0xc0, 0xbd, 0x25, 0x87, 0x94, 0xc4, 0x2e, 0x94, 0xb4, 0xd0, 0xaa, 0xf4, 0xd2, 0x4b,
	0x90, 0xa3, 0xb1, 0x2c, 0x90, 0x34, 0xaa, 0x76, 0x05, 0xf6, 0x1f, 0xe8, 0x7f, 0x4a, 0x7e, 0x5d,
	0x51, 0x56, 0x56, 0x55, 0x45, 0x2a, 0x25, 0xe4, 0x38, 0xa3, 0xa7, 0x37, 0x6f, 0xe6, 0xed, 0x0c,
	0x8c, 0x70, 0xe9, 0x46, 0x49, 0x88, 0xf6, 0x1c, 0x5d, 0x99, 0xa5, 0x78, 0xe9, 0x61, 0x44, 0xb6,
	0x44, 0x21, 0xc7, 0x56, 0x92, 0x92, 0x24, 0xd6, 0x2b, 0x10, 0xe6, 0x33, 0x9f, 0xc8, 0x0f, 0xd1,
	0xbe, 0x4d, 0xcf, 0xb2, 0xb9, 0x8d, 0x51, 0x22, 0x57, 0x0a, 0x65, 0x1e, 0xfb, 0x81, 0x5c, 0x64,
	0x33, 0xeb, 0x8a, 0x22, 0x3b, 0x88, 0xe7, 0x34, 0x0b, 0x69, 0x49, 0x09, 0xc6, 0x0a, 0x7d, 0x75,
	0xe4, 0x63, 0x7c, 0xe4, 0x53, 0x1a, 0xd9, 0x94, 0xc8, 0x80, 0x62, 0x61, 0xe7, 0x81, 0xfa, 0x97,
	0x9f, 0xc2, 0x56, 0x10, 0xcb, 0xcb, 0x84, 0x82, 0x58, 0xb2, 0x27, 0xd0, 0x09, 0xbc, 0xa1, 0x3e,
	0xd2, 0x0f, 0x1e, 0x3b, 0x9d, 0xc0, 0x63, 0xdb, 0xa0, 0x2f, 0x87, 0x9d, 0x91, 0x7e, 0xf0, 0xc8,
	0xd1, 0x97, 0x79, 0xb4, 0x1a, 0x6e, 0xa8, 0x68, 0x75, 0x6c, 0xdc, 0x5c, 0xef, 0x77, 0x36, 0x75,
	0x3e, 0x85, 0xc1, 0x79, 0x8a, 0xae, 0xc4, 0x8f, 0xb1, 0xfc, 0x92, 0xb3, 0x38, 0xf8, 0x33, 0x43,
	0x21, 0xd9, 0x21, 0xf4, 0x12, 0x77, 0x15, 0x92, 0xab, 0x18, 0xfb, 0x63, 0x66, 0x15, 0xdd, 0x58,
	0x65, 0x45, 0x67, 0x0d, 0xe1, 0x13, 0xd8, 0xab, 0xd3, 0x88, 0x84, 0x62, 0x81, 0xec, 0x2d, 0x18,
	0x29, 0x8a, 0x2c, 0x94, 0xff, 0xa0, 0x29, 0x10, 0xfc, 0x35, 0x3c, 0x75, 0xd0, 0xf5, 0xea, 0x52,
	0x6a, 0x7d, 0xf1, 0x33, 0xd8, 0xfd, 0x1b, 0x76, 0x8f, 0x52, 0x53, 0x18, 0x7c, 0x4f, 0xbc, 0x87,
	0xe8, 0xbb, 0x4e, 0x73, 0x0f, 0x31, 0x6f, 0x60, 0x30, 0xc1, 0x10, 0xef, 0x8a, 0xa9, 0x77, 0x3e,
	0x81, 0xdd, 0x4f, 0x81, 0x90, 0x77, 0x8a, 0x1d, 0x42, 0x4f, 0x51, 0x89, 0xa1, 0x3e, 0xda, 0x68,
	0x13, 0x5d, 0x40, 0x78, 0x1f, 0xb6, 0xbe, 0x51, 0x84, 0x72, 0x11, 0xc4, 0xfe, 0xf8, 0x57, 0x17,
	0x36, 0xd7, 0x7c, 0xec, 0x02, 0x0c, 0x65, 0x23, 0x7b, 0x59, 0x12, 0x34, 0x3e, 0x0f, 0xf3, 0x55,
	0xeb, 0x77, 0x25, 0x89, 0x6b, 0x6c, 0x0a, 0xdd, 0xdc, 0x26, 0xf6, 0xbc, 0x84, 0x36, 0x98, 0x6b,
	0xbe, 0x68, 0xf9, 0x5a, 0xd2, 0x5c, 0x80, 0xa1, 0x46, 0x5c, 0xd1, 0xd4, 0x68, 0x5d, 0x45, 0x53,
	0xb3, 0x27, 0x5c, 0x63, 0xa7, 0xd0, 0xcd, 0x07, 0xc8, 0xf6, 0x2c, 0xb5, 0x91, 0xd6, 0x7a, 0x23,
	0xad, 0x69, 0xbe, 0x91, 0x15, 0x35, 0x4d, 0x73, 0xe6, 0x1a, 0xfb, 0x0a, 0x86, 0xb2, 0xaa, 0xa2,
	0xa6, 0xd1, 0x3b, 0xb3, 0xa5, 0x04, 0xdf, 0xb9, 0xb9, 0xde, 0xef, 0x57, 0xd7, 0xf6, 0x3d, 0x6c,
	0x9f, 0x67, 0x42, 0x52, 0xf4, 0x19, 0xe5, 0x82, 0xbc, 0x56, 0x6d, 0x6d, 0x84, 0x1a, 0x3b, 0x81,
	0x1d, 0xe5, 0x42, 0x69, 0x2b, 0xfb, 0xf3, 0x00, 0xca, 0x9c, 0xd9, 0x90, 0xe3, 0x9a, 0x59, 0x5c,
	0x82, 0xb3, 0x0f, 0x3f, 0x26, 0xff, 0x7b, 0x88, 0x9a, 0x0e, 0xdf, 0x49, 0x91, 0x9c, 0x19, 0xb7,
	0xe8, 0x77, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x06, 0xce, 0xeb, 0xe8, 0x1f, 0x05, 0x00, 0x00,
}
