// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/feature_demo/demo_service.proto

package example // import "github.com/infobloxopen/protoc-gen-gorm/example/feature_demo"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/infobloxopen/protoc-gen-gorm/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// int_point is a basic message type representing a single cartesian point
// that we want to store in a database
type IntPoint struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntPoint) Reset()         { *m = IntPoint{} }
func (m *IntPoint) String() string { return proto.CompactTextString(m) }
func (*IntPoint) ProtoMessage()    {}
func (*IntPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{0}
}
func (m *IntPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntPoint.Unmarshal(m, b)
}
func (m *IntPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntPoint.Marshal(b, m, deterministic)
}
func (dst *IntPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntPoint.Merge(dst, src)
}
func (m *IntPoint) XXX_Size() int {
	return xxx_messageInfo_IntPoint.Size(m)
}
func (m *IntPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_IntPoint.DiscardUnknown(m)
}

var xxx_messageInfo_IntPoint proto.InternalMessageInfo

func (m *IntPoint) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IntPoint) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *IntPoint) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type CreateIntPointRequest struct {
	// Convention dictates that this field be of the given type, and be
	// named 'payload' in order to autogenerate the handler
	Payload              *IntPoint `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateIntPointRequest) Reset()         { *m = CreateIntPointRequest{} }
func (m *CreateIntPointRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIntPointRequest) ProtoMessage()    {}
func (*CreateIntPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{1}
}
func (m *CreateIntPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIntPointRequest.Unmarshal(m, b)
}
func (m *CreateIntPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIntPointRequest.Marshal(b, m, deterministic)
}
func (dst *CreateIntPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIntPointRequest.Merge(dst, src)
}
func (m *CreateIntPointRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIntPointRequest.Size(m)
}
func (m *CreateIntPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIntPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIntPointRequest proto.InternalMessageInfo

func (m *CreateIntPointRequest) GetPayload() *IntPoint {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CreateIntPointResponse struct {
	// Convention also requires that the return type be the same and named 'result'
	Result               *IntPoint `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateIntPointResponse) Reset()         { *m = CreateIntPointResponse{} }
func (m *CreateIntPointResponse) String() string { return proto.CompactTextString(m) }
func (*CreateIntPointResponse) ProtoMessage()    {}
func (*CreateIntPointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{2}
}
func (m *CreateIntPointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIntPointResponse.Unmarshal(m, b)
}
func (m *CreateIntPointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIntPointResponse.Marshal(b, m, deterministic)
}
func (dst *CreateIntPointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIntPointResponse.Merge(dst, src)
}
func (m *CreateIntPointResponse) XXX_Size() int {
	return xxx_messageInfo_CreateIntPointResponse.Size(m)
}
func (m *CreateIntPointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIntPointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIntPointResponse proto.InternalMessageInfo

func (m *CreateIntPointResponse) GetResult() *IntPoint {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReadIntPointRequest struct {
	// For a read request, the id field is the only to be specified
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadIntPointRequest) Reset()         { *m = ReadIntPointRequest{} }
func (m *ReadIntPointRequest) String() string { return proto.CompactTextString(m) }
func (*ReadIntPointRequest) ProtoMessage()    {}
func (*ReadIntPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{3}
}
func (m *ReadIntPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadIntPointRequest.Unmarshal(m, b)
}
func (m *ReadIntPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadIntPointRequest.Marshal(b, m, deterministic)
}
func (dst *ReadIntPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadIntPointRequest.Merge(dst, src)
}
func (m *ReadIntPointRequest) XXX_Size() int {
	return xxx_messageInfo_ReadIntPointRequest.Size(m)
}
func (m *ReadIntPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadIntPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadIntPointRequest proto.InternalMessageInfo

func (m *ReadIntPointRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadIntPointResponse struct {
	// Again the type with 'result' name
	Result               *IntPoint `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadIntPointResponse) Reset()         { *m = ReadIntPointResponse{} }
func (m *ReadIntPointResponse) String() string { return proto.CompactTextString(m) }
func (*ReadIntPointResponse) ProtoMessage()    {}
func (*ReadIntPointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{4}
}
func (m *ReadIntPointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadIntPointResponse.Unmarshal(m, b)
}
func (m *ReadIntPointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadIntPointResponse.Marshal(b, m, deterministic)
}
func (dst *ReadIntPointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadIntPointResponse.Merge(dst, src)
}
func (m *ReadIntPointResponse) XXX_Size() int {
	return xxx_messageInfo_ReadIntPointResponse.Size(m)
}
func (m *ReadIntPointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadIntPointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadIntPointResponse proto.InternalMessageInfo

func (m *ReadIntPointResponse) GetResult() *IntPoint {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateIntPointRequest struct {
	Payload              *IntPoint `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateIntPointRequest) Reset()         { *m = UpdateIntPointRequest{} }
func (m *UpdateIntPointRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateIntPointRequest) ProtoMessage()    {}
func (*UpdateIntPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{5}
}
func (m *UpdateIntPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIntPointRequest.Unmarshal(m, b)
}
func (m *UpdateIntPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIntPointRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateIntPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIntPointRequest.Merge(dst, src)
}
func (m *UpdateIntPointRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateIntPointRequest.Size(m)
}
func (m *UpdateIntPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIntPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIntPointRequest proto.InternalMessageInfo

func (m *UpdateIntPointRequest) GetPayload() *IntPoint {
	if m != nil {
		return m.Payload
	}
	return nil
}

type UpdateIntPointResponse struct {
	Result               *IntPoint `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateIntPointResponse) Reset()         { *m = UpdateIntPointResponse{} }
func (m *UpdateIntPointResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateIntPointResponse) ProtoMessage()    {}
func (*UpdateIntPointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{6}
}
func (m *UpdateIntPointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIntPointResponse.Unmarshal(m, b)
}
func (m *UpdateIntPointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIntPointResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateIntPointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIntPointResponse.Merge(dst, src)
}
func (m *UpdateIntPointResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateIntPointResponse.Size(m)
}
func (m *UpdateIntPointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIntPointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIntPointResponse proto.InternalMessageInfo

func (m *UpdateIntPointResponse) GetResult() *IntPoint {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteIntPointRequest struct {
	// Only the id is needed for a delete request
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIntPointRequest) Reset()         { *m = DeleteIntPointRequest{} }
func (m *DeleteIntPointRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIntPointRequest) ProtoMessage()    {}
func (*DeleteIntPointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{7}
}
func (m *DeleteIntPointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIntPointRequest.Unmarshal(m, b)
}
func (m *DeleteIntPointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIntPointRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteIntPointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIntPointRequest.Merge(dst, src)
}
func (m *DeleteIntPointRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIntPointRequest.Size(m)
}
func (m *DeleteIntPointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIntPointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIntPointRequest proto.InternalMessageInfo

func (m *DeleteIntPointRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// By convention, on DELETE no response data is given, so either a
// google.protobuf.empty, or an empty struct is sufficient
type DeleteIntPointResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIntPointResponse) Reset()         { *m = DeleteIntPointResponse{} }
func (m *DeleteIntPointResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIntPointResponse) ProtoMessage()    {}
func (*DeleteIntPointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{8}
}
func (m *DeleteIntPointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIntPointResponse.Unmarshal(m, b)
}
func (m *DeleteIntPointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIntPointResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteIntPointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIntPointResponse.Merge(dst, src)
}
func (m *DeleteIntPointResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIntPointResponse.Size(m)
}
func (m *DeleteIntPointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIntPointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIntPointResponse proto.InternalMessageInfo

type ListIntPointResponse struct {
	// Note repeated field and plural name 'results'
	Results              []*IntPoint `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListIntPointResponse) Reset()         { *m = ListIntPointResponse{} }
func (m *ListIntPointResponse) String() string { return proto.CompactTextString(m) }
func (*ListIntPointResponse) ProtoMessage()    {}
func (*ListIntPointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{9}
}
func (m *ListIntPointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIntPointResponse.Unmarshal(m, b)
}
func (m *ListIntPointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIntPointResponse.Marshal(b, m, deterministic)
}
func (dst *ListIntPointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIntPointResponse.Merge(dst, src)
}
func (m *ListIntPointResponse) XXX_Size() int {
	return xxx_messageInfo_ListIntPointResponse.Size(m)
}
func (m *ListIntPointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIntPointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIntPointResponse proto.InternalMessageInfo

func (m *ListIntPointResponse) GetResults() []*IntPoint {
	if m != nil {
		return m.Results
	}
	return nil
}

// A dummy type to demo an rpc that can't be autogenerated
type Something struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Something) Reset()         { *m = Something{} }
func (m *Something) String() string { return proto.CompactTextString(m) }
func (*Something) ProtoMessage()    {}
func (*Something) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_service_18b21fb89231e579, []int{10}
}
func (m *Something) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Something.Unmarshal(m, b)
}
func (m *Something) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Something.Marshal(b, m, deterministic)
}
func (dst *Something) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Something.Merge(dst, src)
}
func (m *Something) XXX_Size() int {
	return xxx_messageInfo_Something.Size(m)
}
func (m *Something) XXX_DiscardUnknown() {
	xxx_messageInfo_Something.DiscardUnknown(m)
}

var xxx_messageInfo_Something proto.InternalMessageInfo

func init() {
	proto.RegisterType((*IntPoint)(nil), "example.int_point")
	proto.RegisterType((*CreateIntPointRequest)(nil), "example.CreateIntPointRequest")
	proto.RegisterType((*CreateIntPointResponse)(nil), "example.CreateIntPointResponse")
	proto.RegisterType((*ReadIntPointRequest)(nil), "example.ReadIntPointRequest")
	proto.RegisterType((*ReadIntPointResponse)(nil), "example.ReadIntPointResponse")
	proto.RegisterType((*UpdateIntPointRequest)(nil), "example.UpdateIntPointRequest")
	proto.RegisterType((*UpdateIntPointResponse)(nil), "example.UpdateIntPointResponse")
	proto.RegisterType((*DeleteIntPointRequest)(nil), "example.DeleteIntPointRequest")
	proto.RegisterType((*DeleteIntPointResponse)(nil), "example.DeleteIntPointResponse")
	proto.RegisterType((*ListIntPointResponse)(nil), "example.ListIntPointResponse")
	proto.RegisterType((*Something)(nil), "example.Something")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IntPointClient is the client API for IntPoint service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IntPointClient interface {
	// The convention requires the rpc names have Create/Read/Update/List/Delete
	// as a prefix. The type is inferred from the response (except for delete),
	// so multiple objects can have CURDL handlers in the same service, provided
	// they are given unique suffixes
	Create(ctx context.Context, in *CreateIntPointRequest, opts ...grpc.CallOption) (*CreateIntPointResponse, error)
	Read(ctx context.Context, in *ReadIntPointRequest, opts ...grpc.CallOption) (*ReadIntPointResponse, error)
	Update(ctx context.Context, in *UpdateIntPointRequest, opts ...grpc.CallOption) (*UpdateIntPointResponse, error)
	List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListIntPointResponse, error)
	Delete(ctx context.Context, in *DeleteIntPointRequest, opts ...grpc.CallOption) (*DeleteIntPointResponse, error)
	// CustomMethod can't be autogenerated as it matches no conventions, it will
	// become a stub
	CustomMethod(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateSomething also doesn't match conventions and will become a stub
	CreateSomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Something, error)
}

type intPointClient struct {
	cc *grpc.ClientConn
}

func NewIntPointClient(cc *grpc.ClientConn) IntPointClient {
	return &intPointClient{cc}
}

func (c *intPointClient) Create(ctx context.Context, in *CreateIntPointRequest, opts ...grpc.CallOption) (*CreateIntPointResponse, error) {
	out := new(CreateIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPoint/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) Read(ctx context.Context, in *ReadIntPointRequest, opts ...grpc.CallOption) (*ReadIntPointResponse, error) {
	out := new(ReadIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPoint/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) Update(ctx context.Context, in *UpdateIntPointRequest, opts ...grpc.CallOption) (*UpdateIntPointResponse, error) {
	out := new(UpdateIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPoint/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListIntPointResponse, error) {
	out := new(ListIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPoint/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) Delete(ctx context.Context, in *DeleteIntPointRequest, opts ...grpc.CallOption) (*DeleteIntPointResponse, error) {
	out := new(DeleteIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPoint/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) CustomMethod(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/example.IntPoint/CustomMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointClient) CreateSomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Something, error) {
	out := new(Something)
	err := c.cc.Invoke(ctx, "/example.IntPoint/CreateSomething", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IntPoint service

type IntPointServer interface {
	// The convention requires the rpc names have Create/Read/Update/List/Delete
	// as a prefix. The type is inferred from the response (except for delete),
	// so multiple objects can have CURDL handlers in the same service, provided
	// they are given unique suffixes
	Create(context.Context, *CreateIntPointRequest) (*CreateIntPointResponse, error)
	Read(context.Context, *ReadIntPointRequest) (*ReadIntPointResponse, error)
	Update(context.Context, *UpdateIntPointRequest) (*UpdateIntPointResponse, error)
	List(context.Context, *empty.Empty) (*ListIntPointResponse, error)
	Delete(context.Context, *DeleteIntPointRequest) (*DeleteIntPointResponse, error)
	// CustomMethod can't be autogenerated as it matches no conventions, it will
	// become a stub
	CustomMethod(context.Context, *empty.Empty) (*empty.Empty, error)
	// CreateSomething also doesn't match conventions and will become a stub
	CreateSomething(context.Context, *Something) (*Something, error)
}

func RegisterIntPointServer(s *grpc.Server, srv IntPointServer) {
	s.RegisterService(&_IntPoint_serviceDesc, srv)
}

func _IntPoint_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Create(ctx, req.(*CreateIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Read(ctx, req.(*ReadIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Update(ctx, req.(*UpdateIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).List(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).Delete(ctx, req.(*DeleteIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_CustomMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).CustomMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/CustomMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).CustomMethod(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPoint_CreateSomething_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Something)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointServer).CreateSomething(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPoint/CreateSomething",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointServer).CreateSomething(ctx, req.(*Something))
	}
	return interceptor(ctx, in, info, handler)
}

var _IntPoint_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.IntPoint",
	HandlerType: (*IntPointServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IntPoint_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _IntPoint_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _IntPoint_Update_Handler,
		},
		{
			MethodName: "List",
			Handler:    _IntPoint_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _IntPoint_Delete_Handler,
		},
		{
			MethodName: "CustomMethod",
			Handler:    _IntPoint_CustomMethod_Handler,
		},
		{
			MethodName: "CreateSomething",
			Handler:    _IntPoint_CreateSomething_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/feature_demo/demo_service.proto",
}

// IntPointTxnClient is the client API for IntPointTxn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IntPointTxnClient interface {
	// The convention requires the rpc names have Create/Read/Update/List/Delete
	// as a prefix. The type is inferred from the response (except for delete),
	// so multiple objects can have CURDL handlers in the same service, provided
	// they are given unique suffixes
	Create(ctx context.Context, in *CreateIntPointRequest, opts ...grpc.CallOption) (*CreateIntPointResponse, error)
	Read(ctx context.Context, in *ReadIntPointRequest, opts ...grpc.CallOption) (*ReadIntPointResponse, error)
	Update(ctx context.Context, in *UpdateIntPointRequest, opts ...grpc.CallOption) (*UpdateIntPointResponse, error)
	List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListIntPointResponse, error)
	Delete(ctx context.Context, in *DeleteIntPointRequest, opts ...grpc.CallOption) (*DeleteIntPointResponse, error)
	// CustomMethod can't be autogenerated as it matches no conventions, it will
	// become a stub
	CustomMethod(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateSomething also doesn't match conventions and will become a stub
	CreateSomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Something, error)
}

type intPointTxnClient struct {
	cc *grpc.ClientConn
}

func NewIntPointTxnClient(cc *grpc.ClientConn) IntPointTxnClient {
	return &intPointTxnClient{cc}
}

func (c *intPointTxnClient) Create(ctx context.Context, in *CreateIntPointRequest, opts ...grpc.CallOption) (*CreateIntPointResponse, error) {
	out := new(CreateIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPointTxn/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointTxnClient) Read(ctx context.Context, in *ReadIntPointRequest, opts ...grpc.CallOption) (*ReadIntPointResponse, error) {
	out := new(ReadIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPointTxn/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointTxnClient) Update(ctx context.Context, in *UpdateIntPointRequest, opts ...grpc.CallOption) (*UpdateIntPointResponse, error) {
	out := new(UpdateIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPointTxn/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointTxnClient) List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListIntPointResponse, error) {
	out := new(ListIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPointTxn/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointTxnClient) Delete(ctx context.Context, in *DeleteIntPointRequest, opts ...grpc.CallOption) (*DeleteIntPointResponse, error) {
	out := new(DeleteIntPointResponse)
	err := c.cc.Invoke(ctx, "/example.IntPointTxn/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointTxnClient) CustomMethod(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/example.IntPointTxn/CustomMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intPointTxnClient) CreateSomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Something, error) {
	out := new(Something)
	err := c.cc.Invoke(ctx, "/example.IntPointTxn/CreateSomething", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IntPointTxn service

type IntPointTxnServer interface {
	// The convention requires the rpc names have Create/Read/Update/List/Delete
	// as a prefix. The type is inferred from the response (except for delete),
	// so multiple objects can have CURDL handlers in the same service, provided
	// they are given unique suffixes
	Create(context.Context, *CreateIntPointRequest) (*CreateIntPointResponse, error)
	Read(context.Context, *ReadIntPointRequest) (*ReadIntPointResponse, error)
	Update(context.Context, *UpdateIntPointRequest) (*UpdateIntPointResponse, error)
	List(context.Context, *empty.Empty) (*ListIntPointResponse, error)
	Delete(context.Context, *DeleteIntPointRequest) (*DeleteIntPointResponse, error)
	// CustomMethod can't be autogenerated as it matches no conventions, it will
	// become a stub
	CustomMethod(context.Context, *empty.Empty) (*empty.Empty, error)
	// CreateSomething also doesn't match conventions and will become a stub
	CreateSomething(context.Context, *Something) (*Something, error)
}

func RegisterIntPointTxnServer(s *grpc.Server, srv IntPointTxnServer) {
	s.RegisterService(&_IntPointTxn_serviceDesc, srv)
}

func _IntPointTxn_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointTxnServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPointTxn/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointTxnServer).Create(ctx, req.(*CreateIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPointTxn_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointTxnServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPointTxn/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointTxnServer).Read(ctx, req.(*ReadIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPointTxn_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointTxnServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPointTxn/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointTxnServer).Update(ctx, req.(*UpdateIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPointTxn_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointTxnServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPointTxn/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointTxnServer).List(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPointTxn_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIntPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointTxnServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPointTxn/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointTxnServer).Delete(ctx, req.(*DeleteIntPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPointTxn_CustomMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointTxnServer).CustomMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPointTxn/CustomMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointTxnServer).CustomMethod(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntPointTxn_CreateSomething_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Something)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntPointTxnServer).CreateSomething(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.IntPointTxn/CreateSomething",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntPointTxnServer).CreateSomething(ctx, req.(*Something))
	}
	return interceptor(ctx, in, info, handler)
}

var _IntPointTxn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.IntPointTxn",
	HandlerType: (*IntPointTxnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IntPointTxn_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _IntPointTxn_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _IntPointTxn_Update_Handler,
		},
		{
			MethodName: "List",
			Handler:    _IntPointTxn_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _IntPointTxn_Delete_Handler,
		},
		{
			MethodName: "CustomMethod",
			Handler:    _IntPointTxn_CustomMethod_Handler,
		},
		{
			MethodName: "CreateSomething",
			Handler:    _IntPointTxn_CreateSomething_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/feature_demo/demo_service.proto",
}

func init() {
	proto.RegisterFile("example/feature_demo/demo_service.proto", fileDescriptor_demo_service_18b21fb89231e579)
}

var fileDescriptor_demo_service_18b21fb89231e579 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0xd3, 0xe0, 0xa4, 0x93, 0x42, 0xd1, 0xd2, 0x44, 0x89, 0xf9, 0x8a, 0x56, 0x42, 0xad,
	0x50, 0x6b, 0x4b, 0xe1, 0xd6, 0x1e, 0x8a, 0xda, 0x04, 0x09, 0x15, 0x24, 0x14, 0xe0, 0xd2, 0x4b,
	0xe4, 0xc4, 0x13, 0xc7, 0x92, 0xbd, 0x6b, 0xec, 0x35, 0x72, 0x7e, 0x05, 0x17, 0xfe, 0x4c, 0xf2,
	0xeb, 0x90, 0xbb, 0x8e, 0x31, 0xae, 0x8d, 0x50, 0xc5, 0x0d, 0x2e, 0x91, 0x76, 0xf6, 0xe5, 0xcd,
	0x9b, 0x79, 0x33, 0x5e, 0x38, 0xc4, 0xd8, 0xf4, 0x7c, 0x17, 0x8d, 0x05, 0x9a, 0x22, 0x0a, 0x70,
	0x6a, 0xa1, 0xc7, 0x8d, 0xe4, 0x67, 0x1a, 0x62, 0xf0, 0xd5, 0x99, 0xa3, 0xee, 0x07, 0x5c, 0x70,
	0xd2, 0x4c, 0x81, 0xda, 0x63, 0x9b, 0x73, 0xdb, 0x45, 0xe3, 0x26, 0x3c, 0x8b, 0x16, 0x06, 0x7a,
	0xbe, 0x58, 0x49, 0x94, 0x76, 0x6a, 0x3b, 0x62, 0x19, 0xcd, 0xf4, 0x39, 0xf7, 0x0c, 0x87, 0x2d,
	0xf8, 0xcc, 0xe5, 0x31, 0xf7, 0x91, 0x49, 0xf4, 0xfc, 0xc4, 0x46, 0x76, 0x62, 0xf3, 0xc0, 0x33,
	0xb8, 0x2f, 0x1c, 0xce, 0x42, 0x23, 0x39, 0xc8, 0xff, 0xd2, 0x73, 0xd8, 0x75, 0x98, 0x98, 0xfa,
	0xdc, 0x61, 0x82, 0x3c, 0x80, 0xba, 0x63, 0xf5, 0x94, 0x81, 0x72, 0x74, 0x7f, 0x52, 0x77, 0x2c,
	0xb2, 0x07, 0x4a, 0xdc, 0xab, 0x0f, 0x94, 0xa3, 0x7b, 0x13, 0x25, 0x4e, 0x4e, 0xab, 0xde, 0x8e,
	0x3c, 0xad, 0x4e, 0xd5, 0xcd, 0xba, 0x5f, 0x6f, 0x29, 0x74, 0x0c, 0x9d, 0xcb, 0x00, 0x4d, 0x81,
	0x6f, 0x99, 0xf8, 0x90, 0xb0, 0x4c, 0xf0, 0x4b, 0x84, 0xa1, 0x20, 0xc7, 0xd0, 0xf4, 0xcd, 0x95,
	0xcb, 0x4d, 0xc9, 0xd8, 0x1e, 0x12, 0x3d, 0xad, 0x46, 0xcf, 0x32, 0x4e, 0xb6, 0x10, 0x3a, 0x82,
	0x6e, 0x91, 0x26, 0xf4, 0x39, 0x0b, 0x91, 0xbc, 0x04, 0x35, 0xc0, 0x30, 0x72, 0xc5, 0x6f, 0x68,
	0x52, 0x04, 0x7d, 0x01, 0x8f, 0x26, 0x68, 0x5a, 0x45, 0x29, 0x85, 0xba, 0xe8, 0x05, 0x1c, 0xfc,
	0x0a, 0xbb, 0x43, 0xaa, 0x31, 0x74, 0x3e, 0xfb, 0xd6, 0xdf, 0xa8, 0xbb, 0x48, 0x73, 0x07, 0x31,
	0x87, 0xd0, 0x19, 0xa1, 0x8b, 0xb7, 0xc5, 0x14, 0x2b, 0xef, 0x41, 0xb7, 0x08, 0x94, 0xe9, 0xe8,
	0x08, 0x0e, 0xde, 0x39, 0xa1, 0xb8, 0x25, 0xe3, 0x18, 0x9a, 0x32, 0x49, 0xd8, 0x53, 0x06, 0x3b,
	0x55, 0xe5, 0xa4, 0x10, 0xda, 0x86, 0xdd, 0x8f, 0xdc, 0x43, 0xb1, 0x74, 0x98, 0x3d, 0xfc, 0xd6,
	0x80, 0xd6, 0x96, 0x8f, 0x5c, 0x81, 0x2a, 0x0d, 0x26, 0xcf, 0x32, 0x82, 0xd2, 0xc1, 0xd1, 0x9e,
	0x57, 0xde, 0xa7, 0x52, 0x6b, 0x64, 0x0c, 0x8d, 0xc4, 0x40, 0xf2, 0x24, 0x83, 0x96, 0xd8, 0xae,
	0x3d, 0xad, 0xb8, 0xcd, 0x68, 0xae, 0x40, 0x95, 0xcd, 0xcf, 0x69, 0x2a, 0x35, 0x35, 0xa7, 0xa9,
	0xdc, 0x2d, 0x5a, 0x23, 0xe7, 0xd0, 0x48, 0x1a, 0x48, 0xba, 0xba, 0xdc, 0x55, 0x7d, 0xbb, 0xab,
	0xfa, 0x38, 0xd9, 0xd5, 0x9c, 0x9a, 0xb2, 0x3e, 0xd3, 0x1a, 0xb9, 0x06, 0x55, 0x7a, 0x93, 0x53,
	0x53, 0xea, 0x6a, 0x4e, 0x4d, 0x85, 0x99, 0xfb, 0x9b, 0x75, 0xbf, 0x9d, 0xdf, 0xec, 0xd7, 0xb0,
	0x77, 0x19, 0x85, 0x82, 0x7b, 0xef, 0x51, 0x2c, 0xb9, 0x55, 0x29, 0xb2, 0x22, 0x4e, 0x6b, 0xe4,
	0x0c, 0xf6, 0xa5, 0x1d, 0x99, 0xbf, 0xe4, 0xe7, 0x24, 0x64, 0x31, 0xad, 0x24, 0x46, 0x6b, 0x5a,
	0xfa, 0xb1, 0x18, 0x7e, 0x6f, 0x40, 0x7b, 0x2b, 0xf6, 0x53, 0xcc, 0xfe, 0x0f, 0xc5, 0xbf, 0x3c,
	0x14, 0xad, 0xcd, 0xba, 0xdf, 0x68, 0x29, 0x0f, 0x95, 0x8b, 0x37, 0xd7, 0xa3, 0x3f, 0x7d, 0xc2,
	0xca, 0x5e, 0xce, 0xb3, 0x34, 0x38, 0x53, 0x6f, 0xd0, 0xaf, 0x7e, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xf4, 0xe9, 0xb4, 0xd5, 0x60, 0x07, 0x00, 0x00,
}
